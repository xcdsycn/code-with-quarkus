# 启用CORS，允许从一个资源服务的域之外的另一个域请求受限制的资源，使用方法参见POSTMAN中的developer cors
quarkus.http.cors=true
quarkus.http.cors.origins=http://example.com
quarkus.http.cors.methods=GET,PUT,POST,DELETE
quarkus.http.cors.headers=accept,authorization,content-type,x-request-with

# 使用SSL，以keyNote方式存储
quarkus.http.ssl-port=8443
# keystore的类型和相对于src/main/resources的位置
quarkus.http.ssl.certificate.key-store-file=keystore.jks
quarkus.http.ssl.certificate.key-store-file-type=jks
# 打开keystore的密码，这样明文提供密码的方式不好，可以配置环境变量：
# QUARKUS_HTTP_SSL_CERTIFICATE_KEY_STORE_PASSWORD来提供
quarkus.http.ssl.certificate.key-store-password=password

# -------------------------------------------------------
# 自定义配置
# -------------------------------------------------------
greeting.message=Hello world
greeting.suffix=!!, how are you???
# 在GreetingConfiguration中设置了约束，不能大于3
greeting.repeat=3

# -------------------------------------------------------
# profile
# -------------------------------------------------------
# 开发模式下，端口
%dev.quarkus.http.port=8080
%staging.quarkus.http.port=8182
# 单元测试使用的端口号
quarkus.http.test-port=8081

# -------------------------------------------------------
# 日志
# -------------------------------------------------------
quarkus.log.level=DEBUG
# 设置为true的时候可以将文件放到一个固定位置
quarkus.log.file.enable=false
# 设置某个包的日志级别
quarkus.log.category."org.acme".level=INFO

# ------------  日志集成 GELF 需要配logstash 或 fluentd的插件  --------------------------------
#quarkus.log.handler.gelf.enabled=true
#quarkus.log.handler.gelf.host=localhost
#quarkus.log.handler.gelf.port=12201

# ----------- syslog ，这个也需要在fluentd 中设置插件的格式 ，K8S 则需要登录在控制台，在集群中安装一个收集所有日志的中央日志管理器-------------------------------------
quarkus.log.syslog.enable=false
quarkus.log.syslog.endpoint=localhost:5140
quarkus.log.syslog.protocol=udp
quarkus.log.syslog.app-name=quarkus
quarkus.log.syslog.hostname=quarkus.test

# ----------- SPI convert ------------------------
greeting.vat=21%

# -----------------------------------------------------------
# 多语言设置，主要用于hibernate validator
# -----------------------------------------------------------
quarkus.locales=\${user.language:en\-\${user.country:\}}

# -----------------------------------------------------------
# 构建原生可执行文件，docker
# -----------------------------------------------------------
quarkus.native.native-image-xmx=4G